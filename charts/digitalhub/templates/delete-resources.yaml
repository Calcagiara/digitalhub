# Delete all resources
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: delete-resources
  annotations:
    "helm.sh/hook": pre-delete,post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "1"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: delete-resources
  annotations:
    "helm.sh/hook": pre-delete,post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "1"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
rules:
  - apiGroups: ["acid.zalan.do"]
    resources: ["postgresqls"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: [""]
    resources: ["services", "configmaps", "persistentvolumeclaims","pods"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "deployments" ]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["rabbitmq.com"]
    resources: ["rabbitmqclusters"]
    verbs: ["get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: delete-resources
  annotations:
    "helm.sh/hook": pre-delete,post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "1"
  labels:
    {{- include "digitalhub.labels" .  | nindent 4}}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: delete-resources
subjects:
  - name: delete-resources
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-databases
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "3"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-databases
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-databases
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "kubectl -n {{ .Release.Namespace }} delete postgresql --all && sleep 1m"]
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12}}
            readOnlyRootFilesystem: {{ .Values.jobs.delete.securityContext.readOnlyRootFilesystem }}
      restartPolicy: OnFailure
---
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-rabbitmq
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "3"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-rabbitmq
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-rabbimq
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "kubectl -n {{ .Release.Namespace }} delete rabbitmqcluster --all && sleep 1m"]
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12}}
            readOnlyRootFilesystem: {{ .Values.jobs.delete.securityContext.readOnlyRootFilesystem }}
      restartPolicy: OnFailure
---
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-coder
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "3"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-coder
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-coder
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "kubectl -n {{ .Release.Namespace }} delete statefulsets,deploy,svc,cm -l app.kubernetes.io/part-of=coder && kubectl -n {{ .Release.Namespace }} delete --all pvc && kubectl -n {{ .Release.Namespace }} delete --all ingresses && sleep 1m"]
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12}}
            readOnlyRootFilesystem: {{ .Values.jobs.delete.securityContext.readOnlyRootFilesystem }}
      restartPolicy: OnFailure
---
{{- if or .Values.global.cleanup.ingress .Values.global.cleanup.persistentVolumeClaim -}}
{{- $resource := list -}}
{{- if and .Values.global.cleanup.ingress .Values.global.cleanup.persistentVolumeClaim -}}
{{- $resource = append $resource "pvc" -}}
{{- $resource = append $resource "ingresses" -}}
{{- else if  .Values.global.cleanup.ingress -}}
{{- $resource = append $resource "ingresses" -}}
{{- else -}}
{{- $resource = append $resource "pvc" -}}
{{- end -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-pvc-ingress
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "3"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-pvc-ingress
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-pvc-ingress
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "{{ range $resource }}kubectl -n {{ $.Release.Namespace }} delete --all {{ . }} && {{ end }} sleep 1m"]
      restartPolicy: OnFailure
{{- end }}