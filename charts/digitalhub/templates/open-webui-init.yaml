# SPDX-FileCopyrightText: Â© 2025 DSLab - Fondazione Bruno Kessler
#
# SPDX-License-Identifier: AGPL-3.0-or-later

{{ if and (index .Values "open-webui" "initialize" "enabled") (index .Values "open-webui" "enabled") -}}
kind: ConfigMap
apiVersion: v1
metadata:
  name: open-webui-init
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
data:
  opeb-webui-init.sh: |-
    #!/usr/bin/env bash
    curl "${URL}" -X POST \
          -H 'Content-Type: application/json' \
          -d '{
            "name": "admin",
            "email": "'"$USER"'",
            "password": "'"$PASSWORD"'"
          }'
---
apiVersion: batch/v1
kind: Job
metadata:
  name: open-webui-init-job
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    spec:
      {{- with .Values.global.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-open-webui
          image: {{ index .Values "open-webui" "initialize" "image" }}
          command: ["/bin/sh", "-c"]
          args: 
            - until [ "$(curl -s -w '%{http_code}' -o /dev/null http://"{{ include "open-webui.name" (index .Subcharts "open-webui") }}:{{ (index .Subcharts "open-webui" "Values" "service" "port") }}/health")" -eq 200 ]; do echo "waiting for open-webui to be ready"; sleep 5; done
      containers:
        - name: open-webui-init-job
          image: {{ index .Values "open-webui" "initialize" "image" }}
          command: ["/bin/sh",]
          args:
            - /init/opeb-webui-init.sh
          env:
            - name: "USER"
              {{- if and (index .Values "open-webui" "initialize" "admin" "username")  (eq (index .Values "open-webui" "initialize" "admin" "existingSecret" "name") "") }}
              value: {{ (index .Values "open-webui" "initialize" "admin" "username") }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ (index .Values "open-webui" "initialize" "admin" "existingSecret" "name") }}
                  key: {{ (index .Values "open-webui" "initialize" "admin" "existingSecret" "usernameKey") }}
              {{- end }}
            - name: "PASSWORD"
              {{- if and (index .Values "open-webui" "initialize" "admin" "password") (eq (index .Values "open-webui" "initialize" "admin" "existingSecret" "name") "") }}
              value: {{ (index .Values "open-webui" "initialize" "admin" "password") }}
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ (index .Values "open-webui" "initialize" "admin" "existingSecret" "name") }}
                  key: {{ (index .Values "open-webui" "initialize" "admin" "existingSecret" "passwordKey") }}
              {{- end }}
            - name: URL
              value: "http://{{ include "open-webui.name" (index .Subcharts "open-webui") }}:{{ (index .Subcharts "open-webui" "Values" "service" "port") }}/api/v1/auths/signup"
          volumeMounts:
            - mountPath: /init
              name: init-volume
      volumes:
        - name: init-volume
          configMap:
            name: open-webui-init
      restartPolicy: Never
{{- end }}
