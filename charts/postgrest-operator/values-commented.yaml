#  affinity --
affinity:
  #  affinity.nodeAffinity --
  nodeAffinity:
    #  affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution --
    requiredDuringSchedulingIgnoredDuringExecution:
      #  affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms --
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/arch
          operator: In
          values:
          - amd64
          - arm64
          - ppc64le
          - s390x
        - key: kubernetes.io/os
          operator: In
          values:
          - linux
#  autoscaling --
autoscaling:
  #  autoscaling.enabled --
  enabled: false
  #  autoscaling.maxReplicas --
  maxReplicas: 100
  #  autoscaling.minReplicas --
  minReplicas: 1
  #  autoscaling.targetCPUUtilizationPercentage --
  targetCPUUtilizationPercentage: 80
#  deployment --
deployment:
  #  deployment.image --
  image:
    #  deployment.image.pullPolicy --
    pullPolicy: IfNotPresent
  #  deployment.kubeRbacProxy --
  kubeRbacProxy:
    #  deployment.kubeRbacProxy.args --
    args:
    - "--secure-listen-address=0.0.0.0:8443"
    - "--upstream=http://127.0.0.1:8080/"
    - "--logtostderr=true"
    - "--v=0"
    #  deployment.kubeRbacProxy.image --
    image:
      #  deployment.kubeRbacProxy.image.repository --
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      #  deployment.kubeRbacProxy.image.tag --
      tag: v0.13.1
    #  deployment.kubeRbacProxy.name --
    name: kube-rbac-proxy
    #  deployment.kubeRbacProxy.ports --
    ports:
      #  deployment.kubeRbacProxy.ports.containerPort --
      containerPort: 8443
    #  deployment.kubeRbacProxy.resources --
    resources:
      #  deployment.kubeRbacProxy.resources.limits --
      limits:
        #  deployment.kubeRbacProxy.resources.limits.cpu --
        cpu: 500m
        #  deployment.kubeRbacProxy.resources.limits.memory --
        memory: 128Mi
      #  deployment.kubeRbacProxy.resources.requests --
      requests:
        #  deployment.kubeRbacProxy.resources.requests.cpu --
        cpu: 5m
        #  deployment.kubeRbacProxy.resources.requests.memory --
        memory: 64Mi
    #  deployment.kubeRbacProxy.securityContext --
    securityContext:
      #  deployment.kubeRbacProxy.securityContext.allowPrivilegeEscalation --
      allowPrivilegeEscalation: false
      #  deployment.kubeRbacProxy.securityContext.capabilities --
      capabilities:
        #  deployment.kubeRbacProxy.securityContext.capabilities.drop --
        drop:
        - ALL
      #  deployment.kubeRbacProxy.securityContext.readOnlyRootFilesystem --
      readOnlyRootFilesystem: true
      #  deployment.kubeRbacProxy.securityContext.runAsNonRoot --
      runAsNonRoot: true
      #  deployment.kubeRbacProxy.securityContext.seccompProfile --
      seccompProfile:
        #  deployment.kubeRbacProxy.securityContext.seccompProfile.type --
        type: RuntimeDefault
  #  deployment.manager --
  manager:
    #  deployment.manager.args --
    args:
    - "--health-probe-bind-address=:8081"
    - "--metrics-bind-address=127.0.0.1:8080"
    - "--leader-elect"
    #  deployment.manager.command --
    command:
    - /manager
    #  deployment.manager.image --
    image:
      #  deployment.manager.image.repository --
      repository: ghcr.io/scc-digitalhub/postgrest-operator
      #  deployment.manager.image.tag --
      tag: ""
    #  deployment.manager.name --
    name: manager
    #  deployment.manager.resources --
    resources:
      #  deployment.manager.resources.limits --
      limits:
        #  deployment.manager.resources.limits.cpu --
        cpu: 500m
        #  deployment.manager.resources.limits.memory --
        memory: 128Mi
      #  deployment.manager.resources.requests --
      requests:
        #  deployment.manager.resources.requests.cpu --
        cpu: 10m
        #  deployment.manager.resources.requests.memory --
        memory: 64Mi
    #  deployment.manager.securityContext --
    securityContext:
      #  deployment.manager.securityContext.allowPrivilegeEscalation --
      allowPrivilegeEscalation: false
      #  deployment.manager.securityContext.capabilities --
      capabilities:
        #  deployment.manager.securityContext.capabilities.drop --
        drop:
        - ALL
      #  deployment.manager.securityContext.runAsNonRoot --
      runAsNonRoot: true
      #  deployment.manager.securityContext.seccompProfile --
      seccompProfile:
        #  deployment.manager.securityContext.seccompProfile.type --
        type: RuntimeDefault
  #  deployment.podSecurityContext --
  podSecurityContext:
    #  deployment.podSecurityContext.runAsNonRoot --
    runAsNonRoot: true
    #  deployment.podSecurityContext.seccompProfile --
    seccompProfile:
      #  deployment.podSecurityContext.seccompProfile.type --
      type: RuntimeDefault
  #  deployment.replicaCount --
  replicaCount: 1
#  fullnameOverride --
fullnameOverride: ""
#  imagePullSecrets --
imagePullSecrets: []
#  nameOverride --
nameOverride: ""
#  namespaceValues --
namespaceValues:
  #  namespaceValues.namespace --
  namespace: ""
  #  namespaceValues.namespaced --
  namespaced: true
#  nodeSelector --
nodeSelector: {}
#  podAnnotations --
podAnnotations:
  #  podAnnotations.kubectl.kubernetes.io/default-container --
  kubectl.kubernetes.io/default-container: manager
#  podLabels --
podLabels:
  #  podLabels.control-plane --
  control-plane: controller-manager
#  postgres --
postgres:
  #  postgres.default_database --
  default_database: postgres
  #  postgres.host --
  host: localhost
  #  postgres.port --
  port: 5432
  #  postgres.postgrest_image --
  postgrest_image: postgrest/postgrest
  #  postgres.postgrest_image_tag --
  postgrest_image_tag: v11.1.0
  #  postgres.postgrest_service_type --
  postgrest_service_type: ClusterIP
  #  postgres.uri_args --
  uri_args: sslmode=disable
#  postgresCreds --
postgresCreds:
  #  postgresCreds.password --
  password: password
  #  postgresCreds.username --
  username: username
#  postgresCredsExistingSecrets --
postgresCredsExistingSecrets:
  #  postgresCredsExistingSecrets.password --
  password:
    #  postgresCredsExistingSecrets.password.secretKey --
    secretKey: ""
    #  postgresCredsExistingSecrets.password.secretName --
    secretName: ""
  #  postgresCredsExistingSecrets.username --
  username:
    #  postgresCredsExistingSecrets.username.secretKey --
    secretKey: ""
    #  postgresCredsExistingSecrets.username.secretName --
    secretName: ""
#  postgrestString --
postgrestString:
  #  postgrestString.databaseUrlKey --
  databaseUrlKey: ""
  #  postgrestString.existingSecret --
  existingSecret: ""
#  service --
service:
  #  service.port --
  port: 8443
#  serviceAccount --
serviceAccount:
  #  serviceAccount.annotations --
  annotations: {}
  #  serviceAccount.automount --
  automount: true
  #  serviceAccount.create --
  create: true
  #  serviceAccount.name --
  name: postgrest-operator-controller-manager
#  tolerations --
tolerations: []
#  volumeMounts --
volumeMounts: []
#  volumes --
volumes: []
