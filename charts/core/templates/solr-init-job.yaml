# SPDX-FileCopyrightText: Â© 2025 DSLab - Fondazione Bruno Kessler
#
# SPDX-License-Identifier: Apache-2.0

{{ if and .Values.solr.collection.initialize.enabled .Values.solr.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: solr-init-job
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  backoffLimit: 1
  template:
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
        runAsUser: 1000
        fsGroup: 1000
        runAsGroup: 1000
      initContainers:
        - name: wait-solr
          image: {{ .Values.solr.collection.initialize.image }}
          command: ["/bin/sh", "-c"]
          args:
            {{- if and .Values.solr.credentials.existingSecurityJsonSecret.secretName .Values.solr.credentials.existingSecurityJsonSecret.adminKey }}
            - until [ "$(curl --user {{ .Values.solr.credentials.existingSecurityJsonSecret.adminKey }}:$SOLR_ADMIN_PWD -s -w '%{http_code}' -o /dev/null "{{ .Values.solr.url }}/admin/info/health")" -eq 200 ]; do echo "waiting for solr to be ready"; sleep 5; done
            {{- else }}
            - until [ "$(curl --user admin:$SOLR_ADMIN_PWD -s -w '%{http_code}' -o /dev/null "{{ .Values.solr.url }}/admin/info/health")" -eq 200 ]; do echo "waiting for solr to be ready"; sleep 5; done
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
            runAsUser: 1000
          env:
            - name: "SOLR_ADMIN_PWD"
              valueFrom:
                secretKeyRef:
                {{- if and .Values.solr.credentials.existingSecurityJsonSecret.secretName .Values.solr.credentials.existingSecurityJsonSecret.adminKey }}
                  name: {{ .Values.solr.credentials.existingSecurityJsonSecret.secretName }}
                  key: {{ .Values.solr.credentials.existingSecurityJsonSecret.adminKey }}
                {{- else }}
                  name: {{ .Values.solr.collection.initialize.securityJsonSecret }}
                  key: admin
                {{- end }}
      containers:
        - name: solr-init-job
          image: {{ .Values.solr.collection.initialize.image }}
          command: ["/bin/sh", "/script/solr.sh"]
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
            runAsUser: 1000
          volumeMounts:
          - name: init-config
            mountPath: /script
          env:
            - name: "SOLR_ADMIN_PWD"
              valueFrom:
                secretKeyRef:
                {{- if and .Values.solr.credentials.existingSecurityJsonSecret.secretName .Values.solr.credentials.existingSecurityJsonSecret.adminKey }}
                  name: {{ .Values.solr.credentials.existingSecurityJsonSecret.secretName }}
                  key: {{ .Values.solr.credentials.existingSecurityJsonSecret.adminKey }}
                {{- else }}
                  name: {{ .Values.solr.collection.initialize.securityJsonSecret }}
                  key: admin
                {{- end }}
      restartPolicy: Never
      volumes:
        - name: init-config
          configMap:
            name: solr-init-config
{{- end }}
