#  affinity --
affinity: {}

#  autoscaling --
autoscaling:
  #  autoscaling.enabled --
  enabled: false
  #  autoscaling.maxReplicas --
  maxReplicas: 100
  #  autoscaling.minReplicas --
  minReplicas: 1
  #  autoscaling.targetCPUUtilizationPercentage --
  targetCPUUtilizationPercentage: 80

#  env --
env:
  #  env.additionalEnv --
  additionalEnv: {}

#  fullnameOverride --
fullnameOverride: ""

#  global --
global:
  #  global.externalHostAddress --
  externalHostAddress: ""
  #  global.externalTls --
  externalTls: false

#  image --
image:
  #  image.pullPolicy --
  pullPolicy: IfNotPresent
  #  image.repository --
  repository: ghcr.io/scc-digitalhub/kubernetes-resource-manager
  #  image.tag --
  tag: ""

#  imagePullSecrets --
imagePullSecrets: []

#  ingress --
ingress:
  #  ingress.annotations --
  annotations: {}
  #  ingress.className --
  className: ""
  #  ingress.enabled --
  enabled: false
  #  ingress.hosts --
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  #  ingress.tls --
  tls: []

#  nameOverride --
nameOverride: ""

#  namespaceValues --
namespaceValues:
  #  namespaceValues.defaultValue --
  defaultValue: "*"
  #  namespaceValues.namespace --
  namespace: ""

#  nodeSelector --
nodeSelector: {}

#  oidc --
oidc:
  #  oidc.access --
  access:
    #  oidc.access.roles --
    roles: []
  #  oidc.audience --
  audience:
    #  oidc.audience.clientId --
    clientId: ""
    #  oidc.audience.externalSecret --
    externalSecret:
      #  oidc.audience.externalSecret.key --
      key: ""
      #  oidc.audience.externalSecret.name --
      name: ""
  #  oidc.authType --
  authType: ""
  #  oidc.enabled --
  enabled: false
  #  oidc.issuer --
  issuer: ""
  #  oidc.redirectUrl --
  redirectUrl: ""
  #  oidc.roleClaim --
  roleClaim: ""
  #  oidc.scope --
  scope: ""

#  podAnnotations --
podAnnotations: {}

#  podSecurityContext --
podSecurityContext:
  #  podSecurityContext.fsGroup --
  fsGroup: 65532
  #  podSecurityContext.runAsGroup --
  runAsGroup: 65532
  #  podSecurityContext.runAsNonRoot --
  runAsNonRoot: true
  #  podSecurityContext.runAsUser --
  runAsUser: 65532
  #  podSecurityContext.seccompProfile --
  seccompProfile:
    #  podSecurityContext.seccompProfile.type --
    type: RuntimeDefault

#  rbac --
rbac:
  #  rbac.clusterRole --
  clusterRole:
    #  rbac.clusterRole.create --
    create: true
  #  rbac.namespaced --
  namespaced: true
  #  rbac.roles --
  roles:
    - apiGroups: db.movetokube.com
      crd: true
      resources:
        - postgresusers
        - postgres
      verbs:
        - get
        - list
        - create
        - delete
        - patch
    - apiGroups: operator.dremiorestserver.com
      crd: true
      resources:
        - dremiorestservers
      verbs:
        - get
        - list
        - create
        - delete
        - patch
    - apiGroups: operator.postgrest.org
      crd: true
      resources:
        - postgrests
      verbs:
        - get
        - list
        - create
        - delete
        - patch
    - apiGroups: minio.scc-digitalhub.github.io
      crd: true
      resources:
        - buckets
        - policies
        - users
      verbs:
        - get
        - list
        - create
        - delete
        - patch
    - apiGroups: operator.scc-digitalhub.github.io
      crd: true
      resources:
        - apigws
      verbs:
        - get
        - list
        - create
        - delete
        - patch
    - apiGroups: batch
      crd: false
      resources:
        - jobs
      verbs:
        - get
        - list
        - delete
    - apiGroups: apps
      crd: false
      resources:
        - deployments
        - replicasets
      verbs:
        - get
        - list
    - apiGroups: ""
      crd: false
      resources:
        - persistentvolumeclaims
      verbs:
        - get
        - list
        - create
        - delete
        - patch
    - apiGroups: ""
      crd: false
      resources:
        - services
      verbs:
        - get
        - list
    - apiGroups: ""
      crd: false
      resources:
        - secrets
      verbs:
        - get
        - list
    - apiGroups: ""
      resources:
        - pods
        - pods/log
      verbs:
        - get
        - list
        - create
    - apiGroups: ""
      resources:
        - resourcequotas
      verbs:
        - get
        - list

#  replicaCount --
replicaCount: 1

#  resourceSelectors --
resourceSelectors:
  #  resourceSelectors.deployments --
  deployments: app.kubernetes.io/managed-by=postgrest-operator|app.kubernetes.io/managed-by=dremiorestserver-operator|app.kubernetes.io/type=workspace|app.kubernetes.io/managed-by=dhcore
  #  resourceSelectors.jobs --
  jobs: app.kubernetes.io/managed-by=dhcore
  #  resourceSelectors.pvcs --
  pvcs:
    #  resourceSelectors.pvcs.labels --
    labels: app.kubernetes.io/managed-by=krm
    #  resourceSelectors.pvcs.managedBy --
    managedBy: krm
  #  resourceSelectors.secrets --
  secrets:
    #  resourceSelectors.secrets.labels --
    labels: ""
    #  resourceSelectors.secrets.names --
    names: (digitalhub\-owner|digitalhub\-reader|digitalhub\-writer).*
    #  resourceSelectors.secrets.owners --
    owners: db.movetokube.com/v1alpha1
  #  resourceSelectors.services --
  services: app.kubernetes.io/type=service|app.kubernetes.io/managed-by=postgrest-operator|app.kubernetes.io/managed-by=dremiorestserver-operator|com.coder.resource=true|app.kubernetes.io/managed-by=dhcore

#  resources --
resources: {}

#  securityContext --
securityContext:
  #  securityContext.allowPrivilegeEscalation --
  allowPrivilegeEscalation: false
  #  securityContext.capabilities --
  capabilities:
    #  securityContext.capabilities.drop --
    drop:
      - ALL
  #  securityContext.runAsNonRoot --
  runAsNonRoot: true
  #  securityContext.seccompProfile --
  seccompProfile:
    #  securityContext.seccompProfile.type --
    type: RuntimeDefault

#  service --
service:
  #  service.nodePort --
  nodePort: "30160"
  #  service.port --
  port: 8080
  #  service.type --
  type: NodePort

#  serviceAccount --
serviceAccount:
  #  serviceAccount.annotations --
  annotations: {}
  #  serviceAccount.create --
  create: true
  #  serviceAccount.name --
  name: ""

#  storageClasses --
storageClasses: default

#  tolerations --
tolerations: []
