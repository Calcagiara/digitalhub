services:
  # Postgres service with TimescaleDB and PostGIS
  postgres:
    image: timescale/timescaledb-ha:pg14.6-ts2.8.1-latest
    volumes:
        - ./resources/db-init-scripts/postgres-expose-virtualize.sql:/docker-entrypoint-initdb.d/postgres.sql
    ports:
      - 5432:5432
    command:
      - postgres
      - -c
      - timescaledb.telemetry_level=off
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  # PostgREST service
  postgrest:
    image: postgrest/postgrest:v10.0.0
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - postgres
    environment:
      PGRST_DB_URI: postgres://postgres:postgres@postgres:5432/digitalhub
      PGRST_DB_SCHEMA: test_scenario, graphql, public
      PGRST_JWT_SECRET: '{
        "keys": [
          {
            "kty": "RSA",
            "e": "AQAB",
            "use": "sig",
            "kid": "rsa1",
            "alg": "RS256",
            "n": "n_claim_from_aac_jwk_endpoint"
          }
        ]
      }'
      # wrap image to retrieve jwk at container start
      PGRST_DB_ANON_ROLE: test_scenario_user # Comment to require authentication

  # Hasura service
  hasura:
    image: hasura/graphql-engine:v2.10.2.ubuntu
    #ports:
    #  - 4000:8080
    depends_on:
      - postgres
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgres@postgres:5432/digitalhub
      HASURA_GRAPHQL_ENABLE_CONSOLE: true
      HASURA_GRAPHQL_ENABLE_TELEMETRY: false
      # Uncomment the following variable to require authentication
      #HASURA_GRAPHQL_JWT_SECRET: '{
      #  "jwk_url": "https://<aac_instance>/jwk",
      #  "issuer": "https://<aac_instance>",
      #  "audience": "hasura_client_id_in_aac"
      #}'
      #HASURA_GRAPHQL_ADMIN_SECRET: secret123 # Uncomment to require authentication
      
  # Hasura wrapped with OAuth2 Proxy
  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
    #ports:
    #  - 4180:4180
    #depends_on:
    #  - hasura
    command:
      - --http-address
      - 0.0.0.0:4180
    environment:
      OAUTH2_PROXY_UPSTREAMS: "http://hasura:8080/"
    
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_PROVIDER: "oidc"
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: "AAC"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: true
      OAUTH2_PROXY_REDIRECT_URL: "http://localhost:1200/oauth2/callback"
      
      OAUTH2_PROXY_OIDC_ISSUER_URL: "https://<aac_instance>"
      OAUTH2_PROXY_CLIENT_ID: "client_id"
      OAUTH2_PROXY_CLIENT_SECRET: "client_secret"
      
      OAUTH2_PROXY_SKIP_JWT_BEARER_TOKENS: true
      OAUTH2_PROXY_OIDC_EXTRA_AUDIENCES: api://default
      OAUTH2_PROXY_OIDC_EMAIL_CLAIM: "sub"
      
      OAUTH2_PROXY_SET_XAUTHREQUEST: true
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: true
      
      OAUTH2_PROXY_SESSION_STORE_TYPE: redis 
      OAUTH2_PROXY_REDIS_CONNECTION_URL: redis://redis
      
      OAUTH2_PROXY_COOKIE_REFRESH: 30m
      OAUTH2_PROXY_COOKIE_NAME: "SESSION"
      OAUTH2_PROXY_COOKIE_SECRET: "secret1234567890"
      
  redis:
    image: redis:7.0.2-alpine3.16
    volumes:
      - cache:/data

  # Nginx
  nginx:
    image: nginx:1.22.1
    #depends_on:
    #  - oauth2-proxy
    volumes:
      - ./resources/nginx-default.conf.template:/etc/nginx/templates/default.conf.template
    ports:
      - 1200:80

  # MinIO service
  minio:
    image: minio/minio:RELEASE.2022-11-26T22-43-32Z.fips
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./data/minio:/data
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
      #MINIO_IDENTITY_OPENID_CONFIG_URL: "https://<aac_instance>/.well-known/openid-configuration" # Uncomment to require authentication
      MINIO_IDENTITY_OPENID_CLIENT_ID: "client_id"
      MINIO_IDENTITY_OPENID_CLIENT_SECRET: "client_secret"
      MINIO_IDENTITY_OPENID_CLAIM_NAME: "policy"
      MINIO_IDENTITY_OPENID_SCOPES: "openid"
      MINIO_IDENTITY_OPENID_REDIRECT_URI: "http://localhost:9001/oauth_callback"
      MINIO_IDENTITY_OPENID_CLAIM_USERINFO: "on"

    command: server /data --console-address ":9001"

  # Dremio service
  #TODO
volumes:
  cache:
    driver: local
# Default network with static subnet
networks:
  default:
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1